name: CI/CD Workflow

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}

jobs:
  Check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Requirements
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - run: make requirements
    - run: make check
    - run: make lint
    
  Test:
    needs: Check
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4.1.0

    - name: Install Requirements
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies

    - run: make test

  Build:
    needs: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.0
    
    - name: Create the lambda.zip artifact
      run: make build

    - name: Archive lambda.zip artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: lambda-artifact
        path: ./lambda.zip
        
  Staging:
    environment: Staging
    concurrency: Staging
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.0
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_DEFAULT_REGION }}
    
    - name: Retrieve lambda.zip
      uses: actions/download-artifact@v3
      with:
        name: lambda-artifact
    
    - name: Deploy 
      run: make deploy \
            PLATFORM="GitHub Actions" \
            FUNCTION=${{ vars.FUNCTION_NAME }} \
            VERSION=${GITHUB_SHA} \
            BUILD_NUMBER=${GITHUB_RUN_NUMBER}

    - name: Test 
      run: make testdeployment URL=${{ vars.URL }} VERSION=${GITHUB_SHA}
    
  Production:
    needs: Staging
    environment: Production
    concurrency: Production
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.0
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_DEFAULT_REGION }}
    
    - name: Retrieve lambda.zip
      uses: actions/download-artifact@v3
      with:
        name: lambda-artifact

    - name: Deploy 
      run: make deploy \
            PLATFORM="GitHub Actions" \
            FUNCTION=${{ vars.FUNCTION_NAME }} \
            VERSION=${GITHUB_SHA} \
            BUILD_NUMBER=${GITHUB_RUN_NUMBER}

    - name: Test 
      run: make testdeployment URL=${{ vars.URL }} VERSION=${GITHUB_SHA}
